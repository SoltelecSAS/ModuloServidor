/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrInt1.java
 *
 * Created on 30/06/2011, 11:05:09 AM
 */
package com.soltelec.servidor.igrafica;

import com.soltelec.servidor.model.Permisibles;
import com.soltelec.servidor.model.TipoPrueba;
import com.soltelec.servidor.model.TiposMedida;
import com.soltelec.servidor.dao.TipoPruebaJpaController;
import com.soltelec.servidor.dao.TiposMedidaJpaController;
import java.awt.Dimension;
import java.util.Collection;
import java.util.List;

// Variables declaration - do not modify
/**
 *
 * @author Dany
 */
public class FrmPermisibles extends javax.swing.JInternalFrame {

    /**
     * Creates new form FrInt1
     */
    public FrmPermisibles() {
        super("Permisibles",
                true, //resizable
                true, //closable
                false, //maximizable
                true);
        initComponents();
        dimension();
        llenarPruebas();
    }

    private void dimension() {
        Dimension dim = super.getToolkit().getScreenSize();
        this.setSize(dim);
    }

    private void llenarPruebas() {
        TipoPruebaJpaController cTipoPrueba = new TipoPruebaJpaController();
        List<TipoPrueba> pruebas = cTipoPrueba.findTipoPrueba1();

        Object[][] datos = new Object[pruebas.size()][2];
        int row = 0;
        for (TipoPrueba tmpPrueba : pruebas) {
            datos[row][0] = tmpPrueba.getTesttype();
            datos[row][1] = tmpPrueba.getNombretipoprueba();
            row++;
        }
        tblPruebas.setModel(new javax.swing.table.DefaultTableModel(
                datos,
                new String[]{
                    "ID", "Nombre"
                }
        ) {
            Class[] types = new Class[]{
                Integer.class, String.class
            };
            boolean[] canEdit = new boolean[]{
                false, false
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        tblPruebas.getColumn(tblPruebas.getColumnName(0)).setMaxWidth(20);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblPruebas = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblMedidas = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblPermisibles = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);

        tblPruebas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblPruebas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPruebasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblPruebas);

        tblMedidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblMedidas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMedidasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblMedidas);

        jScrollPane4.setViewportView(tblPermisibles);

        jLabel2.setText("Tipo de Pruebas");

        jLabel4.setText("Permisibles");

        jLabel1.setText("Tipo de Medidas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1)
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane3, 0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblPruebasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPruebasMouseClicked
        TiposMedidaJpaController cTipoMedida = new TiposMedidaJpaController();
        int idPrueba = (Integer) tblPruebas.getValueAt(tblPruebas.getSelectedRow(), 0);
        List<TiposMedida> medidas = cTipoMedida.findListTiposMedida(idPrueba);

        Object[][] datos = new Object[medidas.size()][3];
        int row = 0;

        for (TiposMedida tmpMedida : medidas) {
            datos[row][0] = tmpMedida.getMeasuretype();
            datos[row][1] = tmpMedida.getDescripcionmedida();
            datos[row][2] = tmpMedida.getUnidad();
            row++;
        }

        tblMedidas.setModel(new javax.swing.table.DefaultTableModel(
                datos,
                new String[]{
                    "Serial", "Descripcion", "Unidad"
                }
        ) {
            Class[] types = new Class[]{
                Integer.class, String.class, String.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        tblMedidas.getColumn(tblMedidas.getColumnName(0)).setMaxWidth(30);
        tblMedidas.getColumn(tblMedidas.getColumnName(2)).setMaxWidth(50);
    }//GEN-LAST:event_tblPruebasMouseClicked

    private void tblMedidasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMedidasMouseClicked
        //PermisiblesJpaController cPermisibles = new PermisiblesJpaController();
        TiposMedidaJpaController cTipoMedida = new TiposMedidaJpaController();
        int idMedida = (Integer) tblMedidas.getValueAt(tblMedidas.getSelectedRow(), 0);
        TiposMedida tipoMedida = cTipoMedida.findTiposMedida(idMedida);
        //List<Permisibles> permisibles = cPermisibles.findListPermisibles(tipoMedida);
        Collection<Permisibles> permisibles = tipoMedida.getPermisiblesCollection();

        Object[][] datos = new Object[permisibles.size()][7];
        int row = 0;

        for (Permisibles tmpPermisibles : permisibles) {
            datos[row][0] = tmpPermisibles.getIdpermisible();
            datos[row][1] = tmpPermisibles.getValorminimo();
            datos[row][2] = tmpPermisibles.getValormaximo();
            datos[row][3] = tmpPermisibles.getCondicionalminimo();
            datos[row][4] = tmpPermisibles.getCondicionalmaximo();
            datos[row][5] = tmpPermisibles.getDescripciooncondicion();
            datos[row][6] = tmpPermisibles.getTipoVehiculo().getNombre();
            row++;
        }

        tblPermisibles.setModel(new javax.swing.table.DefaultTableModel(
                datos,
                new String[]{
                    "ID", "Valor min", "Valor max", "Con. minima", "Con. maxima", "Descripcion", "Vehiculo"
                }
        ) {
            Class[] types = new Class[]{
                Integer.class, Float.class, Float.class, Float.class, Float.class, String.class, String.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        tblPermisibles.getColumn(tblPermisibles.getColumnName(0)).setMaxWidth(25);
        tblPermisibles.getColumn(tblPermisibles.getColumnName(6)).setMaxWidth(70);
        tblPermisibles.getColumn(tblPermisibles.getColumnName(1)).setMaxWidth(60);
        tblPermisibles.getColumn(tblPermisibles.getColumnName(2)).setMaxWidth(60);
        tblPermisibles.getColumn(tblPermisibles.getColumnName(3)).setMaxWidth(180);
        tblPermisibles.getColumn(tblPermisibles.getColumnName(4)).setMaxWidth(180);
    }//GEN-LAST:event_tblMedidasMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tblMedidas;
    private javax.swing.JTable tblPermisibles;
    public javax.swing.JTable tblPruebas;
    // End of variables declaration//GEN-END:variables
}
