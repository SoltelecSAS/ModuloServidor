/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrInt1.java
 *
 * Created on 30/06/2011, 11:05:09 AM
 */
package com.soltelec.servidor.igrafica;


import com.soltelec.servidor.dao.UsuariosJpaController;
import com.soltelec.servidor.model.Usuarios;
import com.soltelec.servidor.utils.CMensajes;
import com.soltelec.servidor.utils.CValidaciones;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SOLTELEC
 */
public class FrmUsuarios extends javax.swing.JInternalFrame {

    DefaultTableModel tableModelUsuarios;
    List<Usuarios> listUsuarios;
    Integer idUsuario;
    private boolean editando;
    private UsuariosJpaController controller;
    Usuarios usuariosGlobal;
    private Date fecha;
    private boolean passValido;
    private boolean userValido;
    private static final Logger LOG = Logger.getLogger(FrmSimulacion.class.getName());

    /**
     * Creates new form FrInt1
     */
    public FrmUsuarios() {
        super("Usuarios",
                true, //resizable
                true, //closable
                false, //maximizable
                true);

        initComponents();
        dialogo_usuario.setSize(380, 280);
        tableModelUsuarios = new DefaultTableModel();
        tableModelUsuarios.addColumn("Id");
        tableModelUsuarios.addColumn("Nombre");
        tableModelUsuarios.addColumn("Nick");
        tableModelUsuarios.addColumn("Fecha");
        tableModelUsuarios.addColumn("Administrador");
        tabla_usuarios.setModel(tableModelUsuarios);
        controller = new UsuariosJpaController();
        listUsuarios = controller.buscarUsuarios("", "");
        listarUsuarios();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogo_usuario = new javax.swing.JDialog();
        frmUsuario = new javax.swing.JPanel();
        txtUsuario = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        radio_si = new javax.swing.JRadioButton();
        radio_no = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        txtContrasena = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        btn_guardarUsuario = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        txtContrasena2 = new javax.swing.JPasswordField();
        lblEstado = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblUserValidator = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        jToolBar1 = new javax.swing.JToolBar();
        btnNuevo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_usuarios = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txt_buscarUsuario = new javax.swing.JTextField();

        dialogo_usuario.setMinimumSize(new java.awt.Dimension(400, 420));

        frmUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Usuario", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(0, 51, 204))); // NOI18N

        txtUsuario.setToolTipText("");
        txtUsuario.setName("Usuario"); // NOI18N
        txtUsuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUsuarioFocusLost(evt);
            }
        });

        jLabel2.setText("Usuario:");

        txtNombre.setName("Nombre"); // NOI18N

        jLabel3.setText("Nombre:");

        radio_si.setText("Si");
        radio_si.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_siActionPerformed(evt);
            }
        });

        radio_no.setSelected(true);
        radio_no.setText("No");
        radio_no.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_noActionPerformed(evt);
            }
        });

        jLabel4.setText("Administrador:");

        txtContrasena.setName("Contraseña"); // NOI18N
        txtContrasena.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtContrasenaKeyReleased(evt);
            }
        });

        jLabel6.setText("Contraseña:");

        btn_guardarUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/accept.png"))); // NOI18N
        btn_guardarUsuario.setText("Aceptar");
        btn_guardarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarUsuarioActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/block.png"))); // NOI18N
        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtContrasena2.setName("Repetir"); // NOI18N
        txtContrasena2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtContrasena2KeyReleased(evt);
            }
        });

        lblEstado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel8.setText("Repetir:");

        lblUserValidator.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel5.setText("Cedula:");

        txtCedula.setToolTipText("");
        txtCedula.setName("Usuario"); // NOI18N

        javax.swing.GroupLayout frmUsuarioLayout = new javax.swing.GroupLayout(frmUsuario);
        frmUsuario.setLayout(frmUsuarioLayout);
        frmUsuarioLayout.setHorizontalGroup(
            frmUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frmUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frmUsuarioLayout.createSequentialGroup()
                        .addGap(0, 0, 0)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblUserValidator, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frmUsuarioLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_guardarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(frmUsuarioLayout.createSequentialGroup()
                        .addGroup(frmUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(frmUsuarioLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(frmUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel8)
                                    .addGroup(frmUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel3)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(frmUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(frmUsuarioLayout.createSequentialGroup()
                                .addComponent(radio_si)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(radio_no))
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(frmUsuarioLayout.createSequentialGroup()
                                .addComponent(txtContrasena2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        frmUsuarioLayout.setVerticalGroup(
            frmUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frmUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(frmUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtUsuario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(frmUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)))
                    .addComponent(lblUserValidator, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(frmUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(frmUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(frmUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(frmUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(frmUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txtContrasena2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(frmUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(radio_si)
                    .addComponent(radio_no))
                .addGap(18, 18, 18)
                .addGroup(frmUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_guardarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        txtUsuario.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout dialogo_usuarioLayout = new javax.swing.GroupLayout(dialogo_usuario.getContentPane());
        dialogo_usuario.getContentPane().setLayout(dialogo_usuarioLayout);
        dialogo_usuarioLayout.setHorizontalGroup(
            dialogo_usuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogo_usuarioLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(frmUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dialogo_usuarioLayout.setVerticalGroup(
            dialogo_usuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogo_usuarioLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(frmUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setClosable(true);
        setResizable(true);
        setTitle("Manejo de usuarios");
        setFrameIcon(null);
        setPreferredSize(new java.awt.Dimension(500, 500));

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/new.png"))); // NOI18N
        btnNuevo.setToolTipText("Nuevo");
        btnNuevo.setFocusable(false);
        btnNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNuevo);

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/edit.png"))); // NOI18N
        btnEditar.setToolTipText("Editar");
        btnEditar.setEnabled(false);
        btnEditar.setFocusable(false);
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEditar);

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/delete.png"))); // NOI18N
        btnEliminar.setToolTipText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.setFocusable(false);
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEliminar);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Usuarios"));

        tabla_usuarios.setModel(new DefaultTableModel());
        tabla_usuarios.setToolTipText("Listado de usuarios");
        tabla_usuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_usuariosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabla_usuarios);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/search.png"))); // NOI18N
        jLabel1.setToolTipText("Para realizar una busqueda escriba en la caja de texto y de enter");

        txt_buscarUsuario.setToolTipText("Busqueda de usuarios");
        txt_buscarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_buscarUsuarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_buscarUsuario)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_buscarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        limpiarCampos();
        editando = false;
        txtUsuario.setEnabled(true);
        dialogo_usuario.setVisible(true);
        dialogo_usuario.setLocationRelativeTo(null);

    }//GEN-LAST:event_btnNuevoActionPerformed

    private void txt_buscarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_buscarUsuarioActionPerformed
        String parametro = txt_buscarUsuario.getText();
        listUsuarios = controller.buscarUsuarios(parametro, parametro);
        listarUsuarios();
    }//GEN-LAST:event_txt_buscarUsuarioActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        limpiarCampos();
        cargarIdUsuario();
        usuariosGlobal = controller.findUsuarios(idUsuario);
        txtNombre.setText(usuariosGlobal.getNombreusuario());
        txtUsuario.setText(usuariosGlobal.getNickusuario());
        txtCedula.setText(usuariosGlobal.getCedula());
        txtUsuario.setEnabled(false);
        if (usuariosGlobal.getEsAdministrador().equals("Y")) {
            radio_si.setSelected(true);
            radio_no.setSelected(false);
        } else {
            radio_si.setSelected(false);
            radio_no.setSelected(true);
        }
        editando = true;
        dialogo_usuario.setVisible(true);
        dialogo_usuario.setLocationRelativeTo(null);
        btnEditar.setEnabled(false);
        btnEliminar.setEnabled(false);
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (!CMensajes.mensajePregunta("¿Esta seguro de eliminar el usuario: " + tableModelUsuarios.getValueAt(tabla_usuarios.getSelectedRow(), 3) + "?")) {
            return;
        }
        cargarIdUsuario();
        try {
            controller.destroy(idUsuario);
            CMensajes.mensajeCorrecto("Se elimino el usuario correctamente");
            txt_buscarUsuarioActionPerformed(evt);
        } catch (Exception ex) {
            CMensajes.mostrarExcepcion(ex);
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void tabla_usuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_usuariosMouseClicked
        btnEditar.setEnabled(true);
        btnEliminar.setEnabled(true);
    }//GEN-LAST:event_tabla_usuariosMouseClicked

    private void txtContrasena2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContrasena2KeyReleased
        /**
         * Validamos si los dos campos de contraseña coinciden entre si
         */
        if (txtContrasena.getText().equals("")) {
            lblEstado.setIcon(null);
            return;
        }

        if (txtContrasena.getText().equals(txtContrasena2.getText())) {
            lblEstado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/accept.png")));
            passValido = true;
        } else {
            lblEstado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/block.png")));
            passValido = false;
        }
    }//GEN-LAST:event_txtContrasena2KeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dialogo_usuario.setVisible(false);
        lblEstado.setIcon(null);
        lblUserValidator.setIcon(null);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_guardarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarUsuarioActionPerformed

        if (editando) {
            try {
                if (txtContrasena.getPassword().length > 0) {
                    if (!passValido) {
                        CMensajes.mensajeError("Las dos contreseñas no coinciden");
                        return;
                    }
                    usuariosGlobal.setContrasenia(txtContrasena.getText());
                }
                usuariosGlobal.setNickusuario(txtUsuario.getText());
                usuariosGlobal.setCedula(txtCedula.getText());
                usuariosGlobal.setNombreusuario(txtNombre.getText());
                if (radio_si.isSelected()) {
                    usuariosGlobal.setEsAdministrador("Y");
                } else {
                    usuariosGlobal.setEsAdministrador("N");
                }
                controller.edit(usuariosGlobal);
                JOptionPane.showMessageDialog(this, "Se actualizo el usuario correctamente");
            } catch (Exception ex) {
                LOG.severe(ex.getMessage());
                JOptionPane.showMessageDialog(this, "No se pudo actualizar el usuario" + ex);                
            }
        } else {
            try {

                fecha = new Date();
                if (!CValidaciones.validarCampos(frmUsuario)) {
                    return;
                }else if (!userValido) {
                    CMensajes.mensajeError("El usuario " +txtUsuario.getText() + " ya existe, por favor intente con un usuario diferente");
                    txtUsuario.setText("");
                    return;
                }else if (!passValido) {
                    CMensajes.mensajeError("Las dos contreseñas no coinciden");
                    return;
                }   
                
                              
                usuariosGlobal = new Usuarios();
                usuariosGlobal.setGeuser(Integer.BYTES);
                usuariosGlobal.setNickusuario(txtUsuario.getText());
                usuariosGlobal.setCedula(txtCedula.getText());
                fecha.setMonth(fecha.getMonth() + 1);
                usuariosGlobal.setFechavalidacion(fecha);
                usuariosGlobal.setNombreusuario(txtNombre.getText());
                usuariosGlobal.setContrasenia(txtContrasena.getText());
                Calendar cal = Calendar.getInstance();
                cal.setTime(usuariosGlobal.getFechavalidacion());

                if (radio_si.isSelected()) {
                    usuariosGlobal.setEsAdministrador("Y");
                } else {
                    usuariosGlobal.setEsAdministrador("N");
                }

                controller.create(usuariosGlobal);
                CMensajes.mensajeCorrecto("Se creo el usuario: "+ txtUsuario.getText() + " correctamente");
            } catch (Exception ex) {
                System.out.println("entro al catch");
                LOG.severe(ex.getMessage());
                CMensajes.mostrarExcepcion(ex);
                limpiarCampos();
            }
        }
        dialogo_usuario.setVisible(false);
        lblEstado.setIcon(null);
        lblUserValidator.setIcon(null);
        txt_buscarUsuarioActionPerformed(evt);
    }//GEN-LAST:event_btn_guardarUsuarioActionPerformed

    private void txtContrasenaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContrasenaKeyReleased
        /**
         * Validamos si los dos campos de contraseña coinciden entre si
         */

        if (txtContrasena.getText().equals("")) {
            lblEstado.setIcon(null);
            return;
        }

        if (txtContrasena.getText().equals(txtContrasena2.getText())) {
            lblEstado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/accept.png")));
            passValido = true;
        } else {
            lblEstado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/block.png")));
            passValido = false;
        }
    }//GEN-LAST:event_txtContrasenaKeyReleased

    private void radio_noActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_noActionPerformed
        radio_si.setSelected(false);
    }//GEN-LAST:event_radio_noActionPerformed

    private void radio_siActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_siActionPerformed
        radio_no.setSelected(false);
    }//GEN-LAST:event_radio_siActionPerformed

    private void txtUsuarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUsuarioFocusLost
        controller = new UsuariosJpaController();
        if (!txtUsuario.getText().equals("")) {
            if (controller.findUsuariosByNick(txtUsuario.getText())) {
                lblUserValidator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/block.png")));
                userValido = false;
            } else {
                lblUserValidator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/accept.png")));
                userValido = true;
            }
        } else {
            lblUserValidator.setIcon(null);
        }
    }//GEN-LAST:event_txtUsuarioFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btn_guardarUsuario;
    private javax.swing.JDialog dialogo_usuario;
    private javax.swing.JPanel frmUsuario;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblUserValidator;
    private javax.swing.JRadioButton radio_no;
    private javax.swing.JRadioButton radio_si;
    private javax.swing.JTable tabla_usuarios;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JPasswordField txtContrasena;
    private javax.swing.JPasswordField txtContrasena2;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtUsuario;
    private javax.swing.JTextField txt_buscarUsuario;
    // End of variables declaration//GEN-END:variables

    private void limpiarCampos() {
        txtCedula.setText(null);
        txtNombre.setText(null);
        txtContrasena.setText(null);
        txtUsuario.setText(null);
        txtContrasena2.setText(null);
    }

    private void listarUsuarios() {
        Object[] fila;
        if (!listUsuarios.isEmpty()) {
            tableModelUsuarios = new DefaultTableModel();
            tableModelUsuarios.addColumn("Id");
            tableModelUsuarios.addColumn("Cedula");
            tableModelUsuarios.addColumn("Nombre");
            tableModelUsuarios.addColumn("Nick");
            tableModelUsuarios.addColumn("Fecha");
            tableModelUsuarios.addColumn("Administrador");
            for (Usuarios usuarios : listUsuarios) {
                fila = new Object[6];
                fila[0] = usuarios.getGeuser();
                fila[1] = usuarios.getCedula();
                fila[2] = usuarios.getNombreusuario();
                fila[3] = usuarios.getNickusuario();
                fila[4] = new SimpleDateFormat("yyyy-MM-dd").format(usuarios.getFechavalidacion());
                if (usuarios.getEsAdministrador().equals("Y")) {
                    fila[5] = "Si";
                } else {
                    fila[5] = "No";
                }
                tableModelUsuarios.addRow(fila);
            }
            tabla_usuarios.setModel(tableModelUsuarios);
        }
    }

    private void cargarIdUsuario() {
        idUsuario = Integer.parseInt(String.valueOf(tableModelUsuarios.getValueAt(tabla_usuarios.getSelectedRow(), 0)));
    }


    



}

