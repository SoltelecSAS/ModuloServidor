/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.soltelec.servidor.igrafica;

import com.soltelec.servidor.dao.HojaPruebasJpaController;
import com.soltelec.servidor.model.HojaPruebas;
import com.soltelec.servidor.model.Pruebas;
import java.beans.PropertyVetoException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dany
 */
public class InternalPruebaVisual extends javax.swing.JInternalFrame {

    private DefaultTableModel modeloInfoVehiculo;
    private SimpleDateFormat sdf;
    private static final Logger LOG = Logger.getLogger(InternalPruebaVisual.class.getName());
    private List<HojaPruebas> hojasDePruebas;

    /**
     * Creates new form InternalPruebaVisual
     */
    public InternalPruebaVisual() {
        super("Reporte inspeccion sensorial",
                true, //resizable
                true, //closable
                false, //maximizable
                true);
        initModel();
        initComponents();
        sdf = new SimpleDateFormat("dd/MM/yyyy");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblHojaPruebas = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        dpFechaInicial = new org.jdesktop.swingx.JXDatePicker();
        dpFechaInicial.setFormats(new SimpleDateFormat("dd/MM/yyyy"));
        jLabel1 = new javax.swing.JLabel();
        dpFechaFinal = new org.jdesktop.swingx.JXDatePicker();
        dpFechaFinal.setFormats(new SimpleDateFormat("dd/MM/yyyy"));
        jLabel2 = new javax.swing.JLabel();
        btnGenerar = new javax.swing.JButton();
        btnBusquedaAvanzada = new javax.swing.JButton();

        tblHojaPruebas.setModel(modeloInfoVehiculo);
        tblHojaPruebas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHojaPruebasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHojaPruebas);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setText("Fecha Inicio:");

        jLabel2.setText("Fecha Fin:");

        btnGenerar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/green_flag.png"))); // NOI18N
        btnGenerar.setText("Generar");
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        btnBusquedaAvanzada.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/search.png"))); // NOI18N
        btnBusquedaAvanzada.setText("Busqueda avanzada...");
        btnBusquedaAvanzada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBusquedaAvanzadaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dpFechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dpFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBusquedaAvanzada)
                .addContainerGap(324, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dpFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(btnGenerar)
                        .addComponent(btnBusquedaAvanzada))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(dpFechaInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBusquedaAvanzadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBusquedaAvanzadaActionPerformed
        CriteriosBusqueda cb = new CriteriosBusqueda(this);
        cb.setVisible(true);

    }//GEN-LAST:event_btnBusquedaAvanzadaActionPerformed

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        // TODO add your handling code here:
        if (dpFechaInicial.getDate() == null || dpFechaFinal.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Seleccione Fechas");
            return;
        }
        SwingUtilities.invokeLater(
                new Runnable() {

            @Override
            public void run() {
                fillData(dpFechaInicial.getDate(), dpFechaFinal.getDate());
            }
        });
    }//GEN-LAST:event_btnGenerarActionPerformed

    private void tblHojaPruebasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHojaPruebasMouseClicked
        int fila = tblHojaPruebas.rowAtPoint(evt.getPoint());
        int columna = 0;
        int resultado = 0;
        int idPruebaVisual = 0;
        int idVehiculo = 0;
        String usuarioPrueba = "";
        String placa = "";
        if ((fila > -1) && (columna > -1)) {
            try {
                resultado = Integer.parseInt(String.valueOf(modeloInfoVehiculo.getValueAt(fila, columna)));
                lista:
                for (HojaPruebas hojaPruebas : hojasDePruebas) {
                    if (hojaPruebas.getTestsheet() == resultado) {
                        for (Pruebas pruebas : hojaPruebas.getPruebasCollection()) {
                            if (pruebas.getTipoPrueba().getTesttype() == 1) {
                                placa = hojaPruebas.getVehiculos().getCarplate();
                                idPruebaVisual = pruebas.getIdPruebas();
                                usuarioPrueba = pruebas.getUsuarios().getNombreusuario();
                                idVehiculo = hojaPruebas.getVehiculos().getTipoVehiculo().getCartype();
                                break lista;
                            }
                        }
                    }
                }

            } catch (NumberFormatException ex) {
                LOG.severe(ex.getMessage());
                System.out.println("Error en cargue de modelo");
            }
        }

        try {
            InternalPruebaVisualDatos pruebaVisualDatos = new InternalPruebaVisualDatos(idVehiculo, idPruebaVisual, placa, usuarioPrueba, this);
            Principal.desktop.add(pruebaVisualDatos);

            pruebaVisualDatos.toFront();
            pruebaVisualDatos.setMaximum(true);
            pruebaVisualDatos.setVisible(true);
            this.dispose();
            this.setVisible(false);
        } catch (PropertyVetoException ex) {
            LOG.severe(ex.getMessage());
            System.out.println("No ingreso a Hoja de Pruebas");
        }
    }//GEN-LAST:event_tblHojaPruebasMouseClicked

    public void cargarHojas(String consulta) {
        hojasDePruebas = new HojaPruebasJpaController().BuscarCriterios(consulta);
        initModel();
        cargarInfoModelo(hojasDePruebas);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBusquedaAvanzada;
    private javax.swing.JButton btnGenerar;
    private org.jdesktop.swingx.JXDatePicker dpFechaFinal;
    private org.jdesktop.swingx.JXDatePicker dpFechaInicial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHojaPruebas;
    // End of variables declaration//GEN-END:variables

    private void initModel() {
        modeloInfoVehiculo = new DefaultTableModel();

        modeloInfoVehiculo.addColumn("IDENTIFICADOR");//0
        modeloInfoVehiculo.addColumn("PLACA");//1
        modeloInfoVehiculo.addColumn("FECHA DE PRUEBA");//2
        modeloInfoVehiculo.addColumn("RESULTADO");//3
        modeloInfoVehiculo.addColumn("SERVICIO");//4
        modeloInfoVehiculo.addColumn("CLASE");//5
        modeloInfoVehiculo.addColumn("MARCA");//6
        modeloInfoVehiculo.addColumn("LINEA");//7
        modeloInfoVehiculo.addColumn("MODELO");//8

    }

    private void fillData(Date fechaInicial, Date fechaFinal) {
        initModel();
        HojaPruebasJpaController hpjc = new HojaPruebasJpaController();
        hojasDePruebas = hpjc.findByDate(fechaInicial, fechaFinal);
        cargarInfoModelo(hojasDePruebas);
    }

    public void cargarInfoModelo(List<HojaPruebas> hojasDePruebas) {
        if (hojasDePruebas == null || hojasDePruebas.isEmpty()) {
            JOptionPane.showMessageDialog(this, "La consulta no genero datos");
            return;
        }
        for (HojaPruebas hojaPruebas : hojasDePruebas) {
            cargarInformacionHojaPrueba(hojaPruebas);
        }
        tblHojaPruebas.setModel(modeloInfoVehiculo);
        tblHojaPruebas.setEnabled(false);
    }

    private void cargarInformacionHojaPrueba(HojaPruebas hojaPruebas) {
        Object[] objInfoVehiculo = new Object[9];
        objInfoVehiculo[0] = hojaPruebas.getTestsheet();
        objInfoVehiculo[1] = hojaPruebas.getVehiculos().getCarplate();
        objInfoVehiculo[2] = sdf.format(hojaPruebas.getFechaingresovehiculo());
        objInfoVehiculo[3] = "Y".equals(hojaPruebas.getAprobado()) ? "Aprobado" : "Rechazado";
        objInfoVehiculo[4] = hojaPruebas.getVehiculos().getServicios().getNombreservicio();
        objInfoVehiculo[5] = hojaPruebas.getVehiculos().getClasesVehiculo().getNombreclase();
        objInfoVehiculo[6] = hojaPruebas.getVehiculos().getMarcas().getNombremarca();
        objInfoVehiculo[7] = hojaPruebas.getVehiculos().getLineasVehiculos().getCrlname();
        objInfoVehiculo[8] = hojaPruebas.getVehiculos().getModelo();
        modeloInfoVehiculo.addRow(objInfoVehiculo);
    }
}
