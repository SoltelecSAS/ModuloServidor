/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * Principal.java
 *
 * Created on 30/06/2011, 01:19:51 PM
 */
package com.soltelec.servidor.igrafica;

import com.soltelec.servidor.consultas.DatabaseBackup;
import com.soltelec.servidor.utils.CargarArchivos;
import java.awt.event.KeyEvent;
import java.beans.PropertyVetoException;
import java.io.File;
import java.io.IOException;
import java.util.Properties;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.swing.JDesktopPane;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.SwingUtilities;

/**
 *
 * @author GerenciaDesarrollo
 */
public class Principal extends javax.swing.JFrame {

    public static JDesktopPane desktop;
    JFileChooser fc;
    String sFichero;
    File fichero;
    private String musuario;
    private String mpass;
    private String mruta;
    private static final Logger LOG = Logger.getLogger(Principal.class.getName());
    public static EntityManager em;

    public Principal(boolean admin) {
        LOG.log(Level.INFO, "{0}{1}{2}", new Object[]{musuario, mpass, mruta});
        Properties props = new Properties();
        //try retrieve data from file
        try {
            props.load(CargarArchivos.cargarArchivo("conexion.properties"));
            musuario = props.getProperty("usuario");
            mpass = props.getProperty("password");
//            System.out.println(urljdbc);///
//             JOptionPane.showMessageDialog(null, "Direccion ip = " +direccionIP +" usuario = "
//                     +usuario +" password = " +password);///
        } //catch exception in case properties file does not exist
        catch (IOException e) {
            LOG.severe(e.getMessage());
        }

//        musuario = Conexion.usuario;
//        mpass = Conexion.password;
        initComponents();
        desktop = new JDesktopPane(); //a specialized layered pane
        menu_usuario.setEnabled(true);
        setContentPane(desktop);

        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        this.setLocationRelativeTo(null);
    }

    public Principal() {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem10 = new javax.swing.JMenuItem();
        textField1 = new java.awt.TextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuArchivoIniciarCDA = new javax.swing.JMenuItem();
        jMenuArchivoHojaPruebas = new javax.swing.JMenuItem();
        jMenuArchivoPropietario = new javax.swing.JMenuItem();
        jMenuArchivoVehiculo = new javax.swing.JMenuItem();
        mnuDatos = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuArchivoSalir = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuManejoEventoCDA = new javax.swing.JMenuItem();
        menu_marca = new javax.swing.JMenuItem();
        menu_usuario = new javax.swing.JMenu();
        jMenuUsuariosConsulta = new javax.swing.JMenuItem();
        mnuGestionEquipos = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuSicov = new javax.swing.JMenuItem();
        jMenuLlantas = new javax.swing.JMenuItem();
        jMenuLlantas1 = new javax.swing.JMenuItem();
        jMenuSicov1 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        mnuRGeneral = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        mnuReporteMotos = new javax.swing.JMenuItem();
        mnuRColmacarena = new javax.swing.JMenuItem();
        mnuSuper = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        reporteSic = new javax.swing.JMenuItem();
        menuInspeccionSensorial = new javax.swing.JMenuItem();
        menuSuperVijia = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem20 = new javax.swing.JMenuItem();
        RDivecol = new javax.swing.JMenuItem();
        mnuRGeneral1 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem23 = new javax.swing.JMenuItem();
        jMenuItem21 = new javax.swing.JMenuItem();
        mnuRGeneral2 = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        jMenuNormasDefectos = new javax.swing.JMenuItem();
        jMenuNormasTiposMedida = new javax.swing.JMenuItem();
        jMenuNormasPermisibles = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();

        jMenuItem10.setText("jMenuItem10");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Servidor Soltelec"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClose(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        textField1.setText("textField1");

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/full_page.png"))); // NOI18N
        jMenu1.setActionCommand("Archivo"); // NOI18N
        jMenu1.setLabel("Archivo"); // NOI18N

        jMenuArchivoIniciarCDA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/green_flag.png"))); // NOI18N
        jMenuArchivoIniciarCDA.setText("Iniciar CDA");
        jMenuArchivoIniciarCDA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuArchivoIniciarCDAActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuArchivoIniciarCDA);

        jMenuArchivoHojaPruebas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/report.png"))); // NOI18N
        jMenuArchivoHojaPruebas.setText("Hoja de Pruebas");
        jMenuArchivoHojaPruebas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuArchivoHojaPruebasActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuArchivoHojaPruebas);

        jMenuArchivoPropietario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/business_user.png"))); // NOI18N
        jMenuArchivoPropietario.setText("Propietario"); // NOI18N
        jMenuArchivoPropietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuArchivoPropietarioActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuArchivoPropietario);

        jMenuArchivoVehiculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/truck.png"))); // NOI18N
        jMenuArchivoVehiculo.setText("Vehiculo"); // NOI18N
        jMenuArchivoVehiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarVehiculo(evt);
            }
        });
        jMenu1.add(jMenuArchivoVehiculo);

        mnuDatos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/xls_file.png"))); // NOI18N
        mnuDatos.setText("Datos");
        mnuDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuDatosActionPerformed(evt);
            }
        });
        jMenu1.add(mnuDatos);
        jMenu1.add(jSeparator1);

        jMenuArchivoSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/shut_down.png"))); // NOI18N
        jMenuArchivoSalir.setText("Salir"); // NOI18N
        jMenuArchivoSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuArchivoSalirActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuArchivoSalir);

        jMenuBar1.add(jMenu1);

        jMenu5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/laptop_procces.png"))); // NOI18N
        jMenu5.setText("Manejo");

        jMenuManejoEventoCDA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/event.png"))); // NOI18N
        jMenuManejoEventoCDA.setText("Evento Cda");
        jMenuManejoEventoCDA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuManejoEventoCDAActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuManejoEventoCDA);

        menu_marca.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        menu_marca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/add.png"))); // NOI18N
        menu_marca.setText("Insertar Marca");
        menu_marca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_marcaActionPerformed(evt);
            }
        });
        jMenu5.add(menu_marca);

        jMenuBar1.add(jMenu5);

        menu_usuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/add_to_database.png"))); // NOI18N
        menu_usuario.setText("Datos");
        menu_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_usuarioActionPerformed(evt);
            }
        });

        jMenuUsuariosConsulta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/add_male_user.png"))); // NOI18N
        jMenuUsuariosConsulta.setText("Gestion de Usuarios");
        jMenuUsuariosConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuUsuariosConsultaActionPerformed(evt);
            }
        });
        menu_usuario.add(jMenuUsuariosConsulta);

        mnuGestionEquipos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/workflow.png"))); // NOI18N
        mnuGestionEquipos.setText("Gestion de Equipos");
        mnuGestionEquipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuGestionEquiposActionPerformed(evt);
            }
        });
        menu_usuario.add(mnuGestionEquipos);

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/download_database.png"))); // NOI18N
        jMenuItem1.setText("Exportar backup");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menu_usuario.add(jMenuItem1);

        jMenuSicov.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/url.png"))); // NOI18N
        jMenuSicov.setText("URL sicov");
        jMenuSicov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSicovActionPerformed(evt);
            }
        });
        menu_usuario.add(jMenuSicov);

        jMenuLlantas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/rueda.png"))); // NOI18N
        jMenuLlantas.setText("Llantas");
        jMenuLlantas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuLlantasActionPerformed(evt);
            }
        });
        menu_usuario.add(jMenuLlantas);

        jMenuLlantas1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/laptop_procces.png"))); // NOI18N
        jMenuLlantas1.setText("Seriales");
        jMenuLlantas1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuLlantas1ActionPerformed(evt);
            }
        });
        menu_usuario.add(jMenuLlantas1);

        jMenuSicov1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/import.png"))); // NOI18N
        jMenuSicov1.setText("Importar backup");
        jMenuSicov1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuSicov1ActionPerformed(evt);
            }
        });
        menu_usuario.add(jMenuSicov1);

        jMenuBar1.add(menu_usuario);

        jMenu7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/book_accept.png"))); // NOI18N
        jMenu7.setText("Reportes");
        jMenu7.setAutoscrolls(true);

        mnuRGeneral.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/book_search.png"))); // NOI18N
        mnuRGeneral.setText("Reporte General");
        mnuRGeneral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuRGeneralActionPerformed(evt);
            }
        });
        jMenu7.add(mnuRGeneral);

        jMenuItem11.setText("Reporte Bogota");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem11);

        mnuReporteMotos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/pages.png"))); // NOI18N
        mnuReporteMotos.setText("Reporte Motos (Bogotá)");
        mnuReporteMotos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuReporteMotosActionPerformed(evt);
            }
        });
        jMenu7.add(mnuReporteMotos);

        mnuRColmacarena.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/pages.png"))); // NOI18N
        mnuRColmacarena.setText("Cormacarena");
        mnuRColmacarena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuRColmacarenaActionPerformed(evt);
            }
        });
        jMenu7.add(mnuRColmacarena);

        mnuSuper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/book_search.png"))); // NOI18N
        mnuSuper.setText("Superintendencia");
        mnuSuper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSuperActionPerformed(evt);
            }
        });
        jMenu7.add(mnuSuper);

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/book.png"))); // NOI18N
        jMenuItem3.setText("Reporte de Ruido");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem3);

        reporteSic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/book.png"))); // NOI18N
        reporteSic.setText("Superintendencia 2");
        reporteSic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reporteSicActionPerformed(evt);
            }
        });
        jMenu7.add(reporteSic);

        menuInspeccionSensorial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/book.png"))); // NOI18N
        menuInspeccionSensorial.setText("Inspección sensorial ");
        menuInspeccionSensorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuInspeccionSensorialActionPerformed(evt);
            }
        });
        jMenu7.add(menuInspeccionSensorial);

        menuSuperVijia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/book.png"))); // NOI18N
        menuSuperVijia.setText("Superintendencia (Vijia)");
        menuSuperVijia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSuperVijiaActionPerformed(evt);
            }
        });
        jMenu7.add(menuSuperVijia);

        jMenuItem2.setText("Reporte Cortolima");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem2);

        jMenuItem4.setText("Reporte CVG");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem4);

        jMenuItem5.setText("Tabla 6 Equipo");
        jMenuItem5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem5MouseClicked(evt);
            }
        });
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem5);
        jMenu7.add(jSeparator3);

        jMenuItem6.setText("Tabla Equipo CAR");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem6);

        jMenuItem7.setText("Reporte(C.A.R.) Gasolina");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem7);

        jMenuItem9.setText("Reporte Medellin(4983)");
        jMenuItem9.setToolTipText("");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem9);
        jMenuItem9.getAccessibleContext().setAccessibleName("ReportesMedellin");

        jMenuItem18.setText("Reporte Medellin(5365)");
        jMenuItem18.setToolTipText("");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem18);

        jMenuItem19.setText("Reporte Medellin(4231)");
        jMenuItem19.setToolTipText("");
        jMenuItem19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem19ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem19);

        jMenuItem8.setText("Reporte(C.A.R.) Diesel");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem8);

        jMenuItem12.setText("Reporte DAGMA");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem12);

        jMenuItem14.setText("Reporte CORNARE");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem14);

        jMenuItem13.setText("Reporte CORANTIOQUIA");
        jMenuItem13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItem13MouseClicked(evt);
            }
        });
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem13);

        jMenuItem20.setText("Divecol (Motos)");
        jMenuItem20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem20ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem20);

        RDivecol.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/book.png"))); // NOI18N
        RDivecol.setText("Reporte Divecol");
        RDivecol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RDivecolActionPerformed(evt);
            }
        });
        jMenu7.add(RDivecol);

        mnuRGeneral1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/book_search.png"))); // NOI18N
        mnuRGeneral1.setText("Correcion de oxigeno");
        mnuRGeneral1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuRGeneral1ActionPerformed(evt);
            }
        });
        jMenu7.add(mnuRGeneral1);

        jMenuItem16.setText("Reporte CVC");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem16);

        jMenuItem23.setText("Corponor");
        jMenuItem23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem23ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem23);

        jMenuItem21.setText("ReporteCorpocaldas");
        jMenuItem21.setToolTipText("");
        jMenuItem21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem21ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem21);

        mnuRGeneral2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/book_search.png"))); // NOI18N
        mnuRGeneral2.setText("Reporte Corpoboyaca");
        mnuRGeneral2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuRGeneral2ActionPerformed(evt);
            }
        });
        jMenu7.add(mnuRGeneral2);

        jMenuBar1.add(jMenu7);

        jMenu8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/book.png"))); // NOI18N
        jMenu8.setText("Normas");

        jMenuNormasDefectos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/book_warning.png"))); // NOI18N
        jMenuNormasDefectos.setText("Defectos");
        jMenuNormasDefectos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuNormasDefectosActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuNormasDefectos);

        jMenuNormasTiposMedida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/book.png"))); // NOI18N
        jMenuNormasTiposMedida.setText("Tipos Medida");
        jMenuNormasTiposMedida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuNormasTiposMedidaActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuNormasTiposMedida);

        jMenuNormasPermisibles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/servidor/images/book_accept.png"))); // NOI18N
        jMenuNormasPermisibles.setText("Permisibles");
        jMenuNormasPermisibles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuNormasPermisiblesActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuNormasPermisibles);
        jMenu8.add(jSeparator2);

        jMenuBar1.add(jMenu8);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 803, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 579, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuArchivoPropietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuArchivoPropietarioActionPerformed

        propietario();

    }//GEN-LAST:event_jMenuArchivoPropietarioActionPerformed

    private void jMenuArchivoSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuArchivoSalirActionPerformed
        // TODO add your handling code here:
        quit();
    }//GEN-LAST:event_jMenuArchivoSalirActionPerformed

    private void mostrarVehiculo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarVehiculo
        // TODO add your handling code here:
        if ("Vehiculo".equals(evt.getActionCommand())) { //new
            vehiculo();
        }
    }//GEN-LAST:event_mostrarVehiculo

    private void jMenuArchivoIniciarCDAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuArchivoIniciarCDAActionPerformed
        // TODO add your handling code here
        cda();
    }//GEN-LAST:event_jMenuArchivoIniciarCDAActionPerformed

    private void jMenuManejoEventoCDAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuManejoEventoCDAActionPerformed
        eventocda();
    }//GEN-LAST:event_jMenuManejoEventoCDAActionPerformed

    private void jMenuUsuariosConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuUsuariosConsultaActionPerformed
        usuarios();
    }//GEN-LAST:event_jMenuUsuariosConsultaActionPerformed

    private void jMenuArchivoHojaPruebasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuArchivoHojaPruebasActionPerformed
        hojaPruebas();
    }//GEN-LAST:event_jMenuArchivoHojaPruebasActionPerformed

    private void menu_marcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_marcaActionPerformed
        MarcasLineas marcasLineasAutos = new MarcasLineas();
        marcasLineasAutos.setVisible(true);
        desktop.add(marcasLineasAutos);
        try {
            marcasLineasAutos.setMaximum(true);
        } catch (PropertyVetoException ex) {
            LOG.severe(ex.getMessage());
        }
    }//GEN-LAST:event_menu_marcaActionPerformed

    private void mnuDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuDatosActionPerformed
        datos();
    }//GEN-LAST:event_mnuDatosActionPerformed

    private void mnuGestionEquiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuGestionEquiposActionPerformed
        equipos();
    }//GEN-LAST:event_mnuGestionEquiposActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        backupDb();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if ((evt.getKeyCode() == KeyEvent.VK_C) && ((evt.getModifiers() & KeyEvent.CTRL_MASK) != 0) && ((evt.getModifiers() & KeyEvent.ALT_MASK) != 0)) {
            FrmSimulacion frmsimulacion = new FrmSimulacion();
            frmsimulacion.setVisible(true);
        }
    }//GEN-LAST:event_formKeyPressed

    private void jMenuNormasDefectosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuNormasDefectosActionPerformed
        defectos();
    }//GEN-LAST:event_jMenuNormasDefectosActionPerformed

    private void jMenuNormasTiposMedidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuNormasTiposMedidaActionPerformed
        tipoMedidas();
    }//GEN-LAST:event_jMenuNormasTiposMedidaActionPerformed

    private void jMenuNormasPermisiblesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuNormasPermisiblesActionPerformed
        // TODO add your handling code here:
        permisibles();
    }//GEN-LAST:event_jMenuNormasPermisiblesActionPerformed

    private void formWindowClose(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClose
        if (em != null) {
            ///em.close();
        }
    }//GEN-LAST:event_formWindowClose

    private void menu_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_usuarioActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_menu_usuarioActionPerformed

    private void jMenuSicovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSicovActionPerformed
        // TODO add your handling code here:
        urlSicov();
    }//GEN-LAST:event_jMenuSicovActionPerformed

    private void jMenuLlantasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuLlantasActionPerformed
        // TODO add your handling code here:
        AgregarLlantas();
    }//GEN-LAST:event_jMenuLlantasActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        // TODO add your handling code here:
        ReporteCVC();
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void mnuRGeneral1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuRGeneral1ActionPerformed
        // TODO add your handling code here:
        CorrecionDeOxigeno();
    }//GEN-LAST:event_mnuRGeneral1ActionPerformed

    private void RDivecolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RDivecolActionPerformed
        reporteDivecol();
    }//GEN-LAST:event_RDivecolActionPerformed

    private void jMenuItem20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem20ActionPerformed
        reporteDivecolMotos();
    }//GEN-LAST:event_jMenuItem20ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        reporteCorantioquia();
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem13MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem13MouseClicked

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        reporteCornare();
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        reporteDagma();
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        reportCARDiesel();
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem19ActionPerformed
        reportMedellin4231();
    }//GEN-LAST:event_jMenuItem19ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed
        reportMedellin5365();
    }//GEN-LAST:event_jMenuItem18ActionPerformed

    /*
    *
    * Reporte Medellin 
    * Author Diego Garzon
    *
    **/
    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        //Llamar el metodo reportMedellin() de esta misma clase;
        reportMedellin();
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        reportCAR();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        reportTablaEquiposCAR();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        reportTabla6Equipos();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem5MouseClicked
        reportTabla6Equipos();
    }//GEN-LAST:event_jMenuItem5MouseClicked

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        ReporteCVG frame = new ReporteCVG();
        frame.setVisible(true); //necessary as of 1.3

        desktop.add(frame);
        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }
        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        reporteCortolima();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void menuSuperVijiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSuperVijiaActionPerformed
        reportSuperVijia();
    }//GEN-LAST:event_menuSuperVijiaActionPerformed

    private void menuInspeccionSensorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuInspeccionSensorialActionPerformed
        reporteInspeccionsSensorial();
    }//GEN-LAST:event_menuInspeccionSensorialActionPerformed

    private void reporteSicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reporteSicActionPerformed
        reporteSic();
    }//GEN-LAST:event_reporteSicActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        reportSonoro();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void mnuSuperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSuperActionPerformed
        reporteSuperintendencia();
    }//GEN-LAST:event_mnuSuperActionPerformed

    private void mnuRColmacarenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuRColmacarenaActionPerformed
        reportColmacarena();
    }//GEN-LAST:event_mnuRColmacarenaActionPerformed

    private void mnuReporteMotosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuReporteMotosActionPerformed
        reportMotos();
    }//GEN-LAST:event_mnuReporteMotosActionPerformed

    /*
    *
    * Reporte ECCE
    * Author Diego Garzon
    *
    **/
    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        reportBogota();
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void mnuRGeneralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuRGeneralActionPerformed
        reporteGeneral();
    }//GEN-LAST:event_mnuRGeneralActionPerformed

    private void jMenuItem23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem23ActionPerformed
        reporteCorponor();
    }//GEN-LAST:event_jMenuItem23ActionPerformed

    private void jMenuItem21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem21ActionPerformed
        reportCorpocaldas();
    }//GEN-LAST:event_jMenuItem21ActionPerformed

    private void jMenuLlantas1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuLlantas1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuLlantas1ActionPerformed

    private void jMenuSicov1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuSicov1ActionPerformed
        importDatabase();
    }//GEN-LAST:event_jMenuSicov1ActionPerformed

    private void mnuRGeneral2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuRGeneral2ActionPerformed
        reporteCorpoboyaca();
    }//GEN-LAST:event_mnuRGeneral2ActionPerformed

    protected void hojaPruebas() {
        FrmPruebas frame = new FrmPruebas();
        frame.setVisible(true); //necessary as of 1.3
        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void propietario() {
        FrmPropietarios frame = new FrmPropietarios();
        frame.setVisible(true); //necessary as of 1.3
        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void vehiculo() {
        FrmVehiculo frame = new FrmVehiculo();
        frame.setVisible(true); //necessary as of 1.3
        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(true);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void datos() {
        Datos frame = new Datos();
        frame.setVisible(true);
        desktop.add(frame);

        try {
            frame.setMaximum(true);
        } catch (PropertyVetoException e) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", e.getMessage());
        }
    }

    protected void cda() {
        DatosCDA frame = new DatosCDA();
        frame.setVisible(true);
        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void reporteGeneral() {
        ReporteGeneral frame = new ReporteGeneral();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void reporteSuperintendencia() {
        ReporteSuper frame = new ReporteSuper();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }

    }

    protected void reportSonoro() {
        ReportSonoro frame = new ReportSonoro();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void reportMotos() {
        ReportMotos frame = new ReportMotos();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void reportCARDiesel() {
        ReporteCARDiesel frame = new ReporteCARDiesel();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame); //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }
        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void reportCAR() {
        ReporteCAR frame = new ReporteCAR();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);
        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }
        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    /* 
    * Author Diego Garzon
    * Metodo ReportMedellin() para llamar la Clase Reporte Medellin
    * u 
     */
    protected void reportMedellin() {
        ReporteMedellin frame = new ReporteMedellin();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }
        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void reportMedellin5365() {
        ReporteMedellin5365 frame = new ReporteMedellin5365();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }
        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }
    
    protected void reportCorpocaldas() {
        ReporteCorpocaldas frame = new ReporteCorpocaldas();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }
        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }
    
    protected void reporteCorpoboyaca() {
        ReporteCorpoBoyaca frame = new ReporteCorpoBoyaca();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }
        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void reportMedellin4231() {
        ReporteMedellin4231 frame = new ReporteMedellin4231();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }
        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void reporteCorponor() {
        ReporteCorponor frame = new ReporteCorponor();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }
        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }
    protected void reporteDivecolMotos() {
        ReporteDivecol_Motos frame = new ReporteDivecol_Motos();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }
        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    private void Reporte762() {
        Reporte762 frame = new Reporte762();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }
        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    /*
     *
     * Author Diego Garzon
     *Metodo ReportBogota() para llamar la clase de Reporte Bogota
     *
     */
    protected void reportBogota() {
        ReporteBogota frame = new ReporteBogota();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }
        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void reportTablaEquiposCAR() {
        ReportTablaEquipoCAR frame = new ReportTablaEquipoCAR();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);
        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }
        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void reportTabla6Equipos() {
        ReportTabla6Equipos frame = new ReportTabla6Equipos();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);
        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }
        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void eventocda() {
        EventoCDA frame = new EventoCDA();
        frame.setVisible(true);
        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(true);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void reportColmacarena() {
        ReporteCormacarena frame = new ReporteCormacarena();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void reporteOnacMedellin() {
        ReporteOnacM frame = new ReporteOnacM();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void AgregarLlantas() {
        FrmLlantas frame = new FrmLlantas();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void CorrecionDeOxigeno() {
        FrmCorrecionDeOxigeno frame = new FrmCorrecionDeOxigeno();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

//--hg    
    protected void reporteCornare() {
        ReporteCornare frame = new ReporteCornare();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

//--hg 
    protected void reporteCorantioquia() {
        ReporteCorAntioquia frame = new ReporteCorAntioquia();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }
//--hg

    protected void reporteDivecol() {
        ReporteDivecol frame = new ReporteDivecol();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void reporteDagma() {
        ReporteDagma frame = new ReporteDagma();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }
//--hg

    protected void usuarios() {
        FrmUsuarios frame = new FrmUsuarios();
        frame.setVisible(true);
        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void urlSicov() {

        FrmUrlSicov frame = new FrmUrlSicov();
        frame.setVisible(true);
        desktop.add(frame);
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void importDatabase() {
        FrmImportBackup frame = new FrmImportBackup();
        frame.setVisible(true);
        desktop.add(frame);
    }

    protected void equipos() {
        Equipos frame = new Equipos();
        frame.setVisible(true);
        desktop.add(frame);

        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    //Quit the application.
    protected void quit() {
        System.exit(0);
    }

    protected void permisibles() {
        FrmPermisibles frame = new FrmPermisibles();
        frame.setVisible(true); //necessary as of 1.3
        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void tipoMedidas() {
        FrmTiposMedida frame = new FrmTiposMedida();
        frame.setVisible(true); //necessary as of 1.3
        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    protected void defectos() {
        Defectos frame = new Defectos();
        frame.setVisible(true); //necessary as of 1.3      

        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    private void reporteSic() {
        ReporteSuperIntendencia frame = new ReporteSuperIntendencia();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    private void reporteInspeccionsSensorial() {
        InternalPruebaVisual frame = new InternalPruebaVisual();
        frame.setVisible(true); //necessary as of 1.3      

        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    private void reportSuperVijia() {
        ReporteSuperintendenciaVijia frame = new ReporteSuperintendenciaVijia();
        frame.setVisible(true); //necessary as of 1.3

        desktop.add(frame);
        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }
        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    private void reporteCorAntioquia() {
        ReporteCorAntiquioa frame = new ReporteCorAntiquioa();
        frame.setVisible(true); //necessary as of 1.3

        desktop.add(frame);
        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }
        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    private void reporteCortolima() {
        ReporteCortolima frame = new ReporteCortolima();
        frame.setVisible(true); //necessary as of 1.3

        desktop.add(frame);
        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }
        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    private void reporteResultadoEmisiones() {
        ReporteEmisiones frame = new ReporteEmisiones();
        frame.setVisible(true); //necessary as of 1.3      

        desktop.add(frame);

        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }

        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }

    private void backupDb() {
        // Crear un diálogo de progreso indeterminado
        JOptionPane pane = new JOptionPane("Creando...", JOptionPane.PLAIN_MESSAGE, JOptionPane.DEFAULT_OPTION, null, new Object[]{}, null);
        JDialog dialog = pane.createDialog("Mensaje");


        // Declara una variable atómica para verificar si el hilo ya se ha ejecutado
        AtomicBoolean backupExecuted = new AtomicBoolean(false);

        // Ejecutar el respaldo de la base de datos en un hilo separado
        Thread backupThread = new Thread(() -> {
            // Verifica si el hilo aún no se ha ejecutado
            if (!backupExecuted.getAndSet(true)) {
                // Ejecuta la creación del respaldo en el hilo actual
                int result = DatabaseBackup.createBackup();

                // Cierra el diálogo de progreso en el hilo actual
                dialog.dispose();

                // Ejecuta el código relacionado con Swing en el EDT
                SwingUtilities.invokeLater(() -> {
                    // Muestra un cuadro de diálogo después de que el respaldo haya terminado
                    if (result == 0) {
                        JOptionPane.showMessageDialog(null, "Terminado", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                    }else{
                        JOptionPane.showMessageDialog(null, "Este computador debe tener instalado el mysql server y tener configurada la variable de entorno (C:\\Program Files\\MySQL\\MySQL Server x.x\\bin) para poder realizar esta accion. Contacte con soporte", "Mensaje", JOptionPane.ERROR_MESSAGE);
                    }
                });
            }
        });
        backupThread.start();


        JProgressBar progressBar = new JProgressBar();
        progressBar.setIndeterminate(true);
        pane.add(progressBar);
        dialog.pack();
        dialog.setVisible(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new Principal().setVisible(true);
            }
        });

//        String ruta = Conexion.getMysqlBinPath("db_cda");
//        System.out.println("Ruta: " + ruta);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem RDivecol;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuItem jMenuArchivoHojaPruebas;
    private javax.swing.JMenuItem jMenuArchivoIniciarCDA;
    private javax.swing.JMenuItem jMenuArchivoPropietario;
    private javax.swing.JMenuItem jMenuArchivoSalir;
    private javax.swing.JMenuItem jMenuArchivoVehiculo;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem23;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JMenuItem jMenuLlantas;
    private javax.swing.JMenuItem jMenuLlantas1;
    private javax.swing.JMenuItem jMenuManejoEventoCDA;
    private javax.swing.JMenuItem jMenuNormasDefectos;
    private javax.swing.JMenuItem jMenuNormasPermisibles;
    private javax.swing.JMenuItem jMenuNormasTiposMedida;
    private javax.swing.JMenuItem jMenuSicov;
    private javax.swing.JMenuItem jMenuSicov1;
    private javax.swing.JMenuItem jMenuUsuariosConsulta;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JMenuItem menuInspeccionSensorial;
    private javax.swing.JMenuItem menuSuperVijia;
    private javax.swing.JMenuItem menu_marca;
    private javax.swing.JMenu menu_usuario;
    private javax.swing.JMenuItem mnuDatos;
    private javax.swing.JMenuItem mnuGestionEquipos;
    private javax.swing.JMenuItem mnuRColmacarena;
    private javax.swing.JMenuItem mnuRGeneral;
    private javax.swing.JMenuItem mnuRGeneral1;
    private javax.swing.JMenuItem mnuRGeneral2;
    private javax.swing.JMenuItem mnuReporteMotos;
    private javax.swing.JMenuItem mnuSuper;
    private javax.swing.JMenuItem reporteSic;
    private java.awt.TextField textField1;
    // End of variables declaration//GEN-END:variables

    private void ReporteCVC() {
        ReporteCVC frame = new ReporteCVC();
        frame.setSize(this.getToolkit().getScreenSize());
        frame.setVisible(true);
        desktop.add(frame);        //maximizar pantalla
        try {
            frame.setMaximum(rootPaneCheckingEnabled);
        } catch (PropertyVetoException ex) {
            LOG.log(Level.SEVERE, "Error al maximizar frame: {0}", ex.getMessage());
        }
        try {
            frame.setSelected(true);
        } catch (java.beans.PropertyVetoException e) {
        }
    }
}
